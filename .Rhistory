options(scipen=999)
quant = as.numeric(round(calc(temp),2))
temp
calc(temp)
temp = gsub("(?!./)[[:punct:]]", "", temp, perl=TRUE)
temp
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("[^[:punct:]/.]", "", temp, perl=TRUE)
temp
temp = gsub("[[:punct:]/.]", "", temp, perl=TRUE)
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("[[:punct:]/.]", "", temp, perl=TRUE)
temp
temp = gsub("[[A-z][:punct:]/.]", "", food.type$Quantity, perl=TRUE)
temp = gsub("[A-z]", "", food.type$Quantity)
temp
temp = gsub("[[:punct:][0-9]/.]", "", temp, perl=TRUE)
temp
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("[[:punct:][0-9]/.]", "", temp, perl=TRUE)
temp
calc(temp)
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("[[:punct:][0-9]/.]", "", temp, perl=TRUE)
temp[791]
temp = gsub("[A-z]", "", food.type$Quantity)
#temp = gsub("[[:punct:][0-9]/.]", "", temp, perl=TRUE)
temp = gsub("[^[:punct:][:space:]/.]", "", temp)
temp[791]
temp = gsub("[A-z]", "", food.type$Quantity)
#temp = gsub("[[:punct:][0-9]/.]", "", temp, perl=TRUE)
temp = gsub("[[:punct:][:space:]/.]", "", temp)
temp[791]
temp
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("(?!/|.)[[:punct:]]", "", temp, perl=TRUE)
temp
temp[791]
temp = gsub("[A-z]", "", food.type$Quantity)
temp =gsub("-","", temp)
temp = gsub("(?!/|.)[[:punct:]]", "", temp, perl=TRUE)
temp[791]
quant = as.numeric(round(calc(temp),2))
temp = gsub("[A-z]", "", food.type$Quantity)
temp =gsub("-","", temp)
temp = gsub("(?!/|.)[[:punct:]]", "", temp, perl=TRUE)
calc(temp)
temp
temp = gsub("[A-z]", "", food.type$Quantity)
temp =gsub("-","", temp)
temp = gsub("(?=.*?[/.])[[:punct:]]", "", temp, perl=TRUE)
temp[791]
temp = gsub("[A-z]", "", food.type$Quantity)
#temp =gsub("-","", temp)
temp = gsub("(?=.*?[/.])[[:punct:]]", "", temp, perl=TRUE)
temp[791]
temp = gsub("[A-z]", "", food.type$Quantity)
temp =gsub("-","", temp)
temp = gsub("(?!/|)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
temp
temp[791]
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("(?!/|)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
temp[791]
calc(temp)
hist(calc(temp))
barplot(calc(temp))
max(temp)
temp
max(calc(temp))
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("(?!/)|(?!.)[[:punct:]]", "", temp, perl=TRUE)
temp[791]
temp = gsub("(?!/)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
temp[791]
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("(?!/|)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
temp[791]
temp
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("(?!/)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
temp
temp[791]
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("-", "", temp)
temp = gsub("(?!/)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
temp[791]
calc(temp)
temp
x=temp
x1 = c()
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t)) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] =   eval(parse(text=x[i]))
}
print(i)
}
t
x[762]
x[568]
food.type$Quantity[568]
i=568
source('~/.active-rstudio-document', echo=TRUE)
v  = strsplit(x[i], " ")
v
v = v[[1]][which(nchar(v[[1]]) != 0)]
v
####### Functions#####################################
calc = function(x){
x1 = c()
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t)) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
v[j] = gsub(".", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] =   eval(parse(text=x[i]))
}
# print(i)
}
return(x1)
}
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("-", "", temp)
temp = gsub("(?!/)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
temp[791]
food.type$Quantity[568]
calc(temp)
max(calc(temp))
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
calc(temp)
food.data
food.data =   cleanFood(tables)
food.data
names(ff) = c("date","food", "unit", "quantity")
ff = aggregate(x =food.data$quant , by = list( food.data$day, food.data$food.type.Food, food.data$unit  ), FUN=sum)
names(ff) = c("date","food", "unit", "quantity")
food.query
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
food.data =   cleanFood(tables)
ff = aggregate(x =food.data$quant , by = list( food.data$day, food.data$food.type.Food, food.data$unit  ), FUN=sum)
names(ff) = c("date","food", "unit", "quantity")
food.query = ff[,2][1]
food.query
iv = ff[which(ff[,2] == food.query ),]
iv
iv$date = as.Date(iv$date, "%Y-%m-%d")
dr = seq(min(date), max(date), by=1)
date
iv
iv
dr = iv[,1]
ver
dr
iv1 = data.frame(dr, rep(0,length(dr)))
names(iv1) = c("date", "quantity")
iv1
iv1$quantity[match(iv$date,iv1$date)] = iv$quantity
iv1
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
bp = barplot(iv1$quantity, names.arg= format(iv1$date, "%b-%d"), main=
paste(
paste("Consumption of", food.query ,":", sum(iv1$quantity), unique(iv$unit),  sep=" "),
paste(format(min(date), "%b-%d"), "to",  format(max(date), "%b-%d"), sep=" "),
sep = "\n"
)
, xlab="Dates", ylab=as.character(unique(iv$unit)))
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
bp = barplot(iv1$quantity, names.arg= format(iv1$date, "%b-%d"), main=
paste(
paste("Consumption of", food.query ,":", sum(iv1$quantity), unique(iv$unit),  sep=" "),
paste(format(min(dr), "%b-%d"), "to",  format(max(dr), "%b-%d"), sep=" "),
sep = "\n"
)
, xlab="Dates", ylab=as.character(unique(iv$unit)))
food.query
sum(iv1$quantity)
unique(iv$unit)
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
bp = barplot(iv1$quantity, names.arg= format(iv1$date, "%b-%d"), main=
paste(
paste("Consumption of", food.query ,":", sum(iv1$quantity), unique(iv$unit[1]),  sep=" "),
paste(format(min(date), "%b-%d"), "to",  format(max(date), "%b-%d"), sep=" "),
sep = "\n"
)
, xlab="Dates", ylab=as.character(unique(iv$unit)))
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
bp = barplot(iv1$quantity, names.arg= format(iv1$date, "%b-%d"), main=
paste(
paste("Consumption of", food.query ,":", sum(iv1$quantity), unique(iv$unit[1]),  sep=" "),
paste(format(min(dr), "%b-%d"), "to",  format(max(dr), "%b-%d"), sep=" "),
sep = "\n"
)
, xlab="Dates", ylab=as.character(unique(iv$unit)))
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
iv1
iv
unique(iv$unit)
unique(iv$unit)[1]
as.character(unique(iv$unit)[1])
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
ff
head(ff)
head(ff)
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
foodOut = function(tables){
# Macro Pie Chart Aggregate
food.out = data.frame()
for(i in 1:length(unique(tables$day))){
food = tables[as.character(tables$day) == date[i],]
#food = na.omit(food)
calories = sum(as.numeric(as.character(food$Calories)))
carbs = sum(as.numeric(gsub("[A-z]", "", food$Carbs) ))
fat = sum(as.numeric(gsub("[A-z]", "", food$Fat) ))
protein = sum(as.numeric(gsub("[A-z]", "", food$Protein) ))
fiber = sum(as.numeric(gsub("[A-z]", "", food$Fiber) ))
temp = data.frame(calories, carbs, fat, protein, fiber)
food.out = rbind(food.out, temp)
return(food.out)
}
}
head(food.out)
food.out = data.frame()
for(i in 1:length(unique(tables$day))){
food = tables[as.character(tables$day) == date[i],]
#food = na.omit(food)
calories = sum(as.numeric(as.character(food$Calories)))
carbs = sum(as.numeric(gsub("[A-z]", "", food$Carbs) ))
fat = sum(as.numeric(gsub("[A-z]", "", food$Fat) ))
protein = sum(as.numeric(gsub("[A-z]", "", food$Protein) ))
fiber = sum(as.numeric(gsub("[A-z]", "", food$Fiber) ))
temp = data.frame(calories, carbs, fat, protein, fiber)
food.out = rbind(food.out, temp)
}
head(tables)
food.out = data.frame()
for(i in 1:length(unique(tables$day))){
food = tables[as.character(tables$day) == date[i],]
#food = na.omit(food)
calories = sum(as.numeric(as.character(food$Calories)))
carbs = sum(as.numeric(gsub("[A-z]", "", food$Carbs) ))
fat = sum(as.numeric(gsub("[A-z]", "", food$Fat) ))
protein = sum(as.numeric(gsub("[A-z]", "", food$Protein) ))
fiber = sum(as.numeric(gsub("[A-z]", "", food$Fiber) ))
temp = data.frame(calories, carbs, fat, protein, fiber)
food.out = rbind(food.out, temp)
}
food.out = data.frame()
for(i in 1:length(unique(tables$day))){
#  food = tables[as.character(tables$day) == date[i],]
food = tables
calories = sum(as.numeric(as.character(food$Calories)))
carbs = sum(as.numeric(gsub("[A-z]", "", food$Carbs) ))
fat = sum(as.numeric(gsub("[A-z]", "", food$Fat) ))
protein = sum(as.numeric(gsub("[A-z]", "", food$Protein) ))
fiber = sum(as.numeric(gsub("[A-z]", "", food$Fiber) ))
temp = data.frame(calories, carbs, fat, protein, fiber)
food.out = rbind(food.out, temp)
}
head(food.out)
head(food)
calories = sum(as.numeric(as.character(food$Calories)))
calories
as.character(food$Calories)
as.numeric(as.character(food$Calories))
calories = sum(as.numeric(gsub(",","",food$Calories)))
calories
head(food)
head(calories)
calories = as.numeric(gsub(",","",food$Calories))
carbs = as.numeric(gsub("[A-z]", "", food$Carbs) )
fat = as.numeric(gsub("[A-z]", "", food$Fat) )
protein = as.numeric(gsub("[A-z]", "", food$Protein) )
fiber = as.numeric(gsub("[A-z]", "", food$Fiber) )
head(calories)
date = food$day
food.out = aggregate(calories, by=list(date))
food.out = aggregate(calories, by=list(date), fun=sum)
food.out = aggregate(calories, by=list(date), FUN=sum)
food.out
temp = data.frame(calories, carbs, fat, protein, fiber)
food.out = aggregate(temp, by=list(date), FUN=sum)
food.out
foodOut = function(tables){
food = tables
date = food$day
calories = as.numeric(gsub(",","",food$Calories))
carbs = as.numeric(gsub("[A-z]", "", food$Carbs) )
fat = as.numeric(gsub("[A-z]", "", food$Fat) )
protein = as.numeric(gsub("[A-z]", "", food$Protein) )
fiber = as.numeric(gsub("[A-z]", "", food$Fiber) )
temp = data.frame(calories, carbs, fat, protein, fiber)
food.out = aggregate(temp, by=list(date), FUN=sum)
}
foodOut = function(tables){
food = tables
date = food$day
calories = as.numeric(gsub(",","",food$Calories))
carbs = as.numeric(gsub("[A-z]", "", food$Carbs) )
fat = as.numeric(gsub("[A-z]", "", food$Fat) )
protein = as.numeric(gsub("[A-z]", "", food$Protein) )
fiber = as.numeric(gsub("[A-z]", "", food$Fiber) )
temp = data.frame(calories, carbs, fat, protein, fiber)
food.out = aggregate(temp, by=list(date), FUN=sum)
names(food.out)[1] = "day"
return(food.out)
}
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
h = as.character(tables[,1])
h
strsplit(h, ",")
as.data.frame(strsplit(h[i], ","))
as.data.frame(strsplit(h, ","))
i=1
temp = data.frame(strsplit(h[i], ",")[[1]][1], strsplit(h[i], ",")[[1]][length(strsplit(h[i], ",")[[1]]) ] )
temp
food.type = data.frame(rep(0, length(h)), rep(0, length(h)))
head(food.type)
food.type = data.frame(rep(0, length(h)), rep(0, length(h)))
for(i in 1:length(h)){
food.type[i,] = data.frame(strsplit(h[i], ",")[[1]][1], strsplit(h[i], ",")[[1]][length(strsplit(h[i], ",")[[1]]) ] )
}
food.type
data.frame(strsplit(h[i], ",")[[1]][1], strsplit(h[i], ",")[[1]][length(strsplit(h[i], ",")[[1]]) ] )
i
food.type[i,]
food.type[i,] = data.frame("hello", "goodbye")
food.type[i,]
data.frame(strsplit(h[i], ",")[[1]][1], strsplit(h[i], ",")[[1]][length(strsplit(h[i], ",")[[1]]) ] )
df <- data.frame(ID=11:13, FOO=c('a|b','b|c','x|y'))
foo <- data.frame(do.call('rbind', strsplit(as.character(df$FOO),'|',fixed=TRUE)))
df
food
foo
df
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
h
foo <- data.frame(do.call('rbind', strsplit(as.character(h),',',fixed=TRUE)))
foo <- data.frame(do.call('rbind', strsplit(as.character(h),',',fixed=F)))
namemat = do.call(rbind, strsplit(h, "."))
namemat = do.call(rbind, strsplit(h, ","))
namemat = namemat[, 1:5]
namemat
namemat = namemat[, 1:5]
namemat
namemat = do.call(rbind, strsplit(h, " "))
namemat = namemat[, 1:3]
apply(namemat, MARGIN = 1, FUN = function(x){ paste(x, collapse="")})
namemat = do.call(rbind, strsplit(h, " "))
namemat = namemat[, 1:10]
apply(namemat, MARGIN = 1, FUN = function(x){ paste(x, collapse="")})
strsplit(h, ",")
h1 = strsplit(h, ",")
food.type = data.frame()
for(i in 1:length(h)){
temp = data.frame(h1[[i]][1], h1[[i]][length(h1[[i]]) ] )
food.type = rbind(food.type, temp)
}
h1 = strsplit(h, ",")
food.type = data.frame()
for(i in 1:length(h)){
temp = data.frame(h1[[i]][1], h1[[i]][length(h1[[i]]) ] )
food.type[i,] =  temp
}
food.type
h1 = strsplit(h, ",")
food.type = data.frame(c(0,0))
for(i in 1:length(h)){
temp = data.frame(h1[[i]][1], h1[[i]][length(h1[[i]]) ] )
food.type[i,] =  temp
}
food.type
h1 = strsplit(h, ",")
Food = c()
Quantity = c()
for(i in 1:length(h)){
Food[i] = h1[[i]][1]
Quantity[i] = h1[[i]][length(h1[[i]]) ]
}
food.type = data.frame("Food", "Quantity")
Food
Quantity
food.type
h1 = strsplit(h, ",")
Food = c()
Quantity = c()
for(i in 1:length(h)){
Food[i] = h1[[i]][1]
Quantity[i] = h1[[i]][length(h1[[i]]) ]
}
food.type = data.frame(Food, Quantity)
food.type
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
foodOut = function(tables){
food = tables
date = food$day
calories = as.numeric(gsub(",","",food$Calories))
carbs = as.numeric(gsub("[A-z]", "", food$Carbs) )
fat = as.numeric(gsub("[A-z]", "", food$Fat) )
protein = as.numeric(gsub("[A-z]", "", food$Protein) )
fiber = as.numeric(gsub("[A-z]", "", food$Fiber) )
temp = data.frame(calories, carbs, fat, protein, fiber)
food.out = aggregate(temp, by=list(date), FUN=sum)
names(food.out)[1] = "day"
return(food.out)
}
foodOut(tables)
date
tables = tables1[as.character(tables1$day) %in% as.character(date) ,]
food = getFood()
tables
tables1= tables
tables = tables1[as.character(tables1$day) %in% as.character(date) ,]
food.out  = foodIn[as.character(foodIn$day) %in% as.character(date), ]
foodIn = foodOut(tables)
food.out  = foodIn[as.character(foodIn$day) %in% as.character(date), ]
food.out
par(mar=c(3.1, 3.1, 3.1, 3.1), xpd=TRUE)
macros = c(mean(food.out$carbs)-mean(food.out$fiber), mean(fiber), mean(food.out$fat), mean(food.out$protein))
lbls = c("Carbs", "Fiber",  "Fat","Protein")
pie3D(macros,labels=lbls,explode=0.1,  main=paste("Average Macros:", format(min(date), "%b-%d"), "to",  format(max(date), "%b-%d"), sep=" "), col=c("darkgoldenrod2", "chartreuse4", "brown4", "blue3" ))
legend('bottomleft', pt.bg=c("darkgoldenrod2", "chartreuse4", "brown4", "blue3" ), pch=c(22,22,22,22),
legend=paste(lbls, ":",  round(macros,0), "grams", sep=" "), inset=c(.05,.05))
food.out
lot Macro Pie Chart
par(mar=c(3.1, 3.1, 3.1, 3.1), xpd=TRUE)
macros = c(mean(food.out$carbs)-mean(food.out$fiber), mean(food.outfiber), mean(food.out$fat), mean(food.out$protein))
lbls = c("Carbs", "Fiber",  "Fat","Protein")
pie3D(macros,labels=lbls,explode=0.1,  main=paste("Average Macros:", format(min(date), "%b-%d"), "to",  format(max(date), "%b-%d"), sep=" "), col=c("darkgoldenrod2", "chartreuse4", "brown4", "blue3" ))
legend('bottomleft', pt.bg=c("darkgoldenrod2", "chartreuse4", "brown4", "blue3" ), pch=c(22,22,22,22),
legend=paste(lbls, ":",  round(macros,0), "grams", sep=" "), inset=c(.05,.05))
par(mar=c(3.1, 3.1, 3.1, 3.1), xpd=TRUE)
macros = c(mean(food.out$carbs)-mean(food.out$fiber), mean(food.out$fiber), mean(food.out$fat), mean(food.out$protein))
lbls = c("Carbs", "Fiber",  "Fat","Protein")
pie3D(macros,labels=lbls,explode=0.1,  main=paste("Average Macros:", format(min(date), "%b-%d"), "to",  format(max(date), "%b-%d"), sep=" "), col=c("darkgoldenrod2", "chartreuse4", "brown4", "blue3" ))
legend('bottomleft', pt.bg=c("darkgoldenrod2", "chartreuse4", "brown4", "blue3" ), pch=c(22,22,22,22),
legend=paste(lbls, ":",  round(macros,0), "grams", sep=" "), inset=c(.05,.05))
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
