scrape = readHTMLTable(theurl)
scrape
theulr
theurl
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", tolower("MyFitnessPalAnalyzer"), "?from=", date[1], "&to=" , date[1], sep="")
scrape = readHTMLTable(theurl)
scrape
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", tolower("flexforall2"), "?from=", date[1], "&to=" , date[1], sep="")
scrape = readHTMLTable(theurl)
scrape
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "s2konstantine", "?from=", date[1], "&to=" , date[1], sep="")
scrape = readHTMLTable(theurl)
scrape
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", muniska25, "?from=", Sys.Date(), "&to=" , Sys.Date(), sep="")
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "muniska25", "?from=", Sys.Date(), "&to=" , Sys.Date(), sep="")
theurl
scrape = readHTMLTable(theurl)
theurl
readHTMLTable(theurl)
?readHTMLTable
scrape = readHTMLTable(theurl, header=T)
scrape = readHTMLTable(theurl, header=F)
scrape
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "s2konstantine", "?from=", date[1], "&to=" , date[1], sep="")
scrape = readHTMLTable(theurl)
scrape
names(scrape[[1]])
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
theurl
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "muniska25", "?from=", Sys.Date(), "&to=" , Sys.Date(), sep="")
scrape = readHTMLTable(theurl, header=F)
scrape
min.date = Sys.Date()-20
max.date = Sys.Date()
date = seq(as.Date(min.date, "%Y-%m-%d"), as.Date(max.date, "%Y-%m-%d"), by=1)
ns = c("Foods" ,   "Calories" ,"Carbs" ,   "Fat"     , "Protein"  ,"Cholest" , "Sodium"  , "Sugars" ,  "Fiber"  )
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "muniska25", "?from=", Sys.Date(), "&to=" , Sys.Date(), sep="")
scrape = readHTMLTable(theurl, header=F)
scrape
min.date = Sys.Date()-20
max.date = Sys.Date()
date = seq(as.Date(min.date, "%Y-%m-%d"), as.Date(max.date, "%Y-%m-%d"), by=1)
ns = c("Foods" ,   "Calories" ,"Carbs" ,   "Fat"     , "Protein"  ,"Cholest" , "Sodium"  , "Sugars" ,  "Fiber"  )
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "muniska25", "?from=", min.date, "&to=" , max.date, sep="")
scrape = readHTMLTable(theurl, header=F)
scrape
tables = data.frame()
for(i in 1:length(scrape)){
if(ncol(scrape[[i]])==length(ns)){
day = rep(date[i],nrow(scrape[[i]]))
temp =   data.frame(scrape[[i]], day )
tables = rbind(tables, temp)
} else{
tables =tables
}
}
tables = na.omit(tables)
names(tables) = c(ns, "day")
tables$day = as.Date(tables$day, "%Y-%m-%d")
tables
cleanFood(tables)
h = as.character(tables[,1])
h
h1 = strsplit(h, ",")
Food = c()
Quantity = c()
for(i in 1:length(h)){
Food[i] = h1[[i]][1]
Quantity[i] = h1[[i]][length(h1[[i]]) ]
}
food.type = data.frame(Food, Quantity)
food.type
names(food.type) = c("Food", "Quantity")
food.type$Quantity = gsub("\\(.*\\)", "", food.type$Quantity )
food.type$Quantity =  sub("mL.*", "ml", food.type$Quantity)
food.type$Quantity =  sub("grams.*", "grams", food.type$Quantity)
unit = gsub("[./0-9]", "", food.type$Quantity)
#food.type$Quantity =  sub("[0-9] .*", "", food.type$Quantity)
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("(?!/)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
temp
x = temp
calc(x)
calc = function(x){
if(length(x)>0) {
x1 = c()
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t)) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
v[j] = gsub(".", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] =   eval(parse(text=x[i]))
}
# print(i)
}
} else{
x1 = 0
}
print(i)
return(x1)
}
calc(x)
x1 = c()
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t)) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
v[j] = gsub(".", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] =   eval(parse(text=x[i]))
}
# print(i)
}
} else{
x1 = 0
}
print(i)
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t)) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
v[j] = gsub(".", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] =   eval(parse(text=x[i]))
}
print(i)
} # End For
i
temp[86]
temp
x[86]
x
j
t1
class(t1)
v
i
v  = strsplit(x[i], " ")
v
v = v[[1]][which(nchar(v[[1]]) != 0)]
v
length(v)
calc = function(x){
if(length(x)>0) {
x1 = c()
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t)) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
if(length(v)>0){
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
v[j] = gsub(".", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] = 0
}
} else{
x1[i] =   eval(parse(text=x[i]))
}
print(i)
} # End For
} else{
x1 = 0
}
print(i)
return(x1)
}
calc(x)
t
i
t=   try(eval(parse(text=x[i])) , silent=T)
t
x[i]
t=   try(eval(parse(text=x[i])) , silent=T)
t
i=85
t=   try(eval(parse(text=x[i])) , silent=T)
t
x = temp
calc = function(x){
if(length(x)>0) {
x1 = c()
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t) || is.null(t)==T) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
v[j] = gsub(".", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] =   eval(parse(text=x[i]))
}
print(i)
} # End For
} else{
x1 = 0
}
print(i)
return(x1)
}
calc(x)
x
h = as.character(tables[,1])
h1 = strsplit(h, ",")
Food = c()
Quantity = c()
for(i in 1:length(h)){
Food[i] = h1[[i]][1]
Quantity[i] = h1[[i]][length(h1[[i]]) ]
}
food.type = data.frame(Food, Quantity)
names(food.type) = c("Food", "Quantity")
######## Remove characters, fluff ####################################################
food.type$Quantity = gsub("\\(.*\\)", "", food.type$Quantity )
food.type$Quantity =  sub("mL.*", "ml", food.type$Quantity)
food.type$Quantity =  sub("grams.*", "grams", food.type$Quantity)
unit = gsub("[./0-9]", "", food.type$Quantity)
#food.type$Quantity =  sub("[0-9] .*", "", food.type$Quantity)
temp = gsub("[A-z]", "", food.type$Quantity)
temp = gsub("(?!/)|(?!/.)[[:punct:]]", "", temp, perl=TRUE)
x = temp
calc = function(x){
if(length(x)>0) {
x1 = c()
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t) || is.null(t)==T) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
v[j] = gsub(".", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] =   eval(parse(text=x[i]))
}
print(i)
} # End For
} else{
x1 = 0
}
print(i)
return(x1)
}
calc(x)
calc = function(x){
if(length(x)>0) {
x1 = c()
for(i in 1:length(x)){
# for(i in 240){
t=   try(eval(parse(text=x[i])) , silent=T)
if("try-error" %in% class(t) || is.null(t)==T) {
v  = strsplit(x[i], " ")
v = v[[1]][which(nchar(v[[1]]) != 0)]
if(length(v)>0){
temp = c()
for(j in 1:length(v)) {
t1 =   try(eval(parse(text=v[j])) , silent=T)
if("try-error" %in% class(t1)) {
v[j] = gsub("/", "0", v[j])
v[j] = gsub(".", "0", v[j])
temp[j] = sum(eval(parse(text=v[j])) )
} else {
temp[j] = sum(eval(parse(text=v[j])) )
}
}
x1[i] =  sum(temp)
} else{
x1[i] = 0
}
} else{
x1[i] =   eval(parse(text=x[i]))
}
print(i)
} # End For
} else{
x1 = 0
}
print(i)
return(x1)
}
calc(x)
min.date = Sys.Date()-20
max.date = Sys.Date()
date = seq(as.Date(min.date, "%Y-%m-%d"), as.Date(max.date, "%Y-%m-%d"), by=1)
ns = c("Foods" ,   "Calories" ,"Carbs" ,   "Fat"     , "Protein"  ,"Cholest" , "Sodium"  , "Sugars" ,  "Fiber"  )
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "muniska25", "?from=", min.date, "&to=" , max.date, sep="")
scrape = readHTMLTable(theurl, header=F)
## add date back in *sigh*
######## Append Date ################################################
tables = data.frame()
for(i in 1:length(scrape)){
if(ncol(scrape[[i]])==length(ns)){
day = rep(date[i],nrow(scrape[[i]]))
temp =   data.frame(scrape[[i]], day )
tables = rbind(tables, temp)
} else{
tables =tables
}
}
tables = na.omit(tables)
names(tables) = c(ns, "day")
tables$day = as.Date(tables$day, "%Y-%m-%d")
tables
cleanFood(tables)
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
min.date = Sys.Date()-20
max.date = Sys.Date()
date = seq(as.Date(min.date, "%Y-%m-%d"), as.Date(max.date, "%Y-%m-%d"), by=1)
ns = c("Foods" ,   "Calories" ,"Carbs" ,   "Fat"     , "Protein"  ,"Cholest" , "Sodium"  , "Sugars" ,  "Fiber"  )
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "MyFitnessPalAnalyzer", "?from=", min.date, "&to=" , max.date, sep="")
scrape = readHTMLTable(theurl, header=F)
scrape
theurl
min.date = Sys.Date()-1
max.date = Sys.Date()
date = seq(as.Date(min.date, "%Y-%m-%d"), as.Date(max.date, "%Y-%m-%d"), by=1)
ns = c("Foods" ,   "Calories" ,"Carbs" ,   "Fat"     , "Protein"  ,"Cholest" , "Sodium"  , "Sugars" ,  "Fiber"  )
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "MyFitnessPalAnalyzer", "?from=", min.date, "&to=" , max.date, sep="")
scrape = readHTMLTable(theurl, header=F)
scrape
theurl
min.date = Sys.Date()-1
max.date = Sys.Date()
date = seq(as.Date(min.date, "%Y-%m-%d"), as.Date(max.date, "%Y-%m-%d"), by=1)
ns = c("Foods" ,   "Calories" ,"Carbs" ,   "Fat"     , "Protein"  ,"Cholest" , "Sodium"  , "Sugars" ,  "Fiber"  )
theurl = paste("http://www.myfitnesspal.com/reports/printable_diary/", "MyFitnessPalAnalyzer", "?from=", min.date, "&to=" , max.date, sep="")
scrape = readHTMLTable(theurl, header=F)
scrape
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
setwd("/Users/Joshua/Desktop/Internet/Internet/MFP1")
source("libraries.R")
runApp(getwd())
